'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace wsTicket
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="ServizioRemotoSoap", [Namespace]:="https://biglietti.mailticket.it/")>  _
    Partial Public Class ServizioRemoto
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private RecuperaBigliettiOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InserisciAnagraficaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.VisualizzaBiglietti.My.MySettings.Default.VisualizzaBiglietti_wsTicket_ServizioRemoto
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event RecuperaBigliettiCompleted As RecuperaBigliettiCompletedEventHandler
        
        '''<remarks/>
        Public Event InserisciAnagraficaCompleted As InserisciAnagraficaCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://biglietti.mailticket.it/RecuperaBiglietti", RequestNamespace:="https://biglietti.mailticket.it/", ResponseNamespace:="https://biglietti.mailticket.it/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RecuperaBiglietti(ByVal NumTel As String, ByVal IdMan As String) As Biglietto()
            Dim results() As Object = Me.Invoke("RecuperaBiglietti", New Object() {NumTel, IdMan})
            Return CType(results(0),Biglietto())
        End Function
        
        '''<remarks/>
        Public Overloads Sub RecuperaBigliettiAsync(ByVal NumTel As String, ByVal IdMan As String)
            Me.RecuperaBigliettiAsync(NumTel, IdMan, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RecuperaBigliettiAsync(ByVal NumTel As String, ByVal IdMan As String, ByVal userState As Object)
            If (Me.RecuperaBigliettiOperationCompleted Is Nothing) Then
                Me.RecuperaBigliettiOperationCompleted = AddressOf Me.OnRecuperaBigliettiOperationCompleted
            End If
            Me.InvokeAsync("RecuperaBiglietti", New Object() {NumTel, IdMan}, Me.RecuperaBigliettiOperationCompleted, userState)
        End Sub
        
        Private Sub OnRecuperaBigliettiOperationCompleted(ByVal arg As Object)
            If (Not (Me.RecuperaBigliettiCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RecuperaBigliettiCompleted(Me, New RecuperaBigliettiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://biglietti.mailticket.it/InserisciAnagrafica", RequestNamespace:="https://biglietti.mailticket.it/", ResponseNamespace:="https://biglietti.mailticket.it/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InserisciAnagrafica(ByVal Nome As String, ByVal Cognome As String, ByVal CodiceBiglietto As String) As Boolean
            Dim results() As Object = Me.Invoke("InserisciAnagrafica", New Object() {Nome, Cognome, CodiceBiglietto})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InserisciAnagraficaAsync(ByVal Nome As String, ByVal Cognome As String, ByVal CodiceBiglietto As String)
            Me.InserisciAnagraficaAsync(Nome, Cognome, CodiceBiglietto, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InserisciAnagraficaAsync(ByVal Nome As String, ByVal Cognome As String, ByVal CodiceBiglietto As String, ByVal userState As Object)
            If (Me.InserisciAnagraficaOperationCompleted Is Nothing) Then
                Me.InserisciAnagraficaOperationCompleted = AddressOf Me.OnInserisciAnagraficaOperationCompleted
            End If
            Me.InvokeAsync("InserisciAnagrafica", New Object() {Nome, Cognome, CodiceBiglietto}, Me.InserisciAnagraficaOperationCompleted, userState)
        End Sub
        
        Private Sub OnInserisciAnagraficaOperationCompleted(ByVal arg As Object)
            If (Not (Me.InserisciAnagraficaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InserisciAnagraficaCompleted(Me, New InserisciAnagraficaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="https://biglietti.mailticket.it/")>  _
    Partial Public Class Biglietto
        
        Private qRCodeField As String
        
        Private codiceBigliettoField As String
        
        Private nomeField As String
        
        Private cognomeField As String
        
        Private nomeEventoField As String
        
        Private dataEventoField As String
        
        Private sCNField As String
        
        Private sCPField As String
        
        Private sCMACField As String
        
        Private prezzoField As String
        
        Private prevenditaField As String
        
        Private totaleField As String
        
        Private filaepostoField As String
        
        Private titolareField As String
        
        Private organizzatoreField As String
        
        Private dataEmissioneField As String
        
        Private sistemaField As String
        
        Private tipoTitoloField As String
        
        Private descTitoloField As String
        
        Private modificatoField As Boolean
        
        '''<remarks/>
        Public Property QRCode() As String
            Get
                Return Me.qRCodeField
            End Get
            Set
                Me.qRCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CodiceBiglietto() As String
            Get
                Return Me.codiceBigliettoField
            End Get
            Set
                Me.codiceBigliettoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Nome() As String
            Get
                Return Me.nomeField
            End Get
            Set
                Me.nomeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Cognome() As String
            Get
                Return Me.cognomeField
            End Get
            Set
                Me.cognomeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NomeEvento() As String
            Get
                Return Me.nomeEventoField
            End Get
            Set
                Me.nomeEventoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DataEvento() As String
            Get
                Return Me.dataEventoField
            End Get
            Set
                Me.dataEventoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SCN() As String
            Get
                Return Me.sCNField
            End Get
            Set
                Me.sCNField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SCP() As String
            Get
                Return Me.sCPField
            End Get
            Set
                Me.sCPField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SCMAC() As String
            Get
                Return Me.sCMACField
            End Get
            Set
                Me.sCMACField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Prezzo() As String
            Get
                Return Me.prezzoField
            End Get
            Set
                Me.prezzoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Prevendita() As String
            Get
                Return Me.prevenditaField
            End Get
            Set
                Me.prevenditaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Totale() As String
            Get
                Return Me.totaleField
            End Get
            Set
                Me.totaleField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property filaeposto() As String
            Get
                Return Me.filaepostoField
            End Get
            Set
                Me.filaepostoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Titolare() As String
            Get
                Return Me.titolareField
            End Get
            Set
                Me.titolareField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Organizzatore() As String
            Get
                Return Me.organizzatoreField
            End Get
            Set
                Me.organizzatoreField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DataEmissione() As String
            Get
                Return Me.dataEmissioneField
            End Get
            Set
                Me.dataEmissioneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Sistema() As String
            Get
                Return Me.sistemaField
            End Get
            Set
                Me.sistemaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TipoTitolo() As String
            Get
                Return Me.tipoTitoloField
            End Get
            Set
                Me.tipoTitoloField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DescTitolo() As String
            Get
                Return Me.descTitoloField
            End Get
            Set
                Me.descTitoloField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Modificato() As Boolean
            Get
                Return Me.modificatoField
            End Get
            Set
                Me.modificatoField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub RecuperaBigliettiCompletedEventHandler(ByVal sender As Object, ByVal e As RecuperaBigliettiCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RecuperaBigliettiCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Biglietto()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Biglietto())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub InserisciAnagraficaCompletedEventHandler(ByVal sender As Object, ByVal e As InserisciAnagraficaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InserisciAnagraficaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
End Namespace
